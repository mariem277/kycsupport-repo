package com.reactit.kyc.supp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FaceMatchAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFaceMatchAllPropertiesEquals(FaceMatch expected, FaceMatch actual) {
        assertFaceMatchAutoGeneratedPropertiesEquals(expected, actual);
        assertFaceMatchAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFaceMatchAllUpdatablePropertiesEquals(FaceMatch expected, FaceMatch actual) {
        assertFaceMatchUpdatableFieldsEquals(expected, actual);
        assertFaceMatchUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFaceMatchAutoGeneratedPropertiesEquals(FaceMatch expected, FaceMatch actual) {
        assertThat(actual)
            .as("Verify FaceMatch auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFaceMatchUpdatableFieldsEquals(FaceMatch expected, FaceMatch actual) {
        assertThat(actual)
            .as("Verify FaceMatch relevant properties")
            .satisfies(a -> assertThat(a.getSelfieUrl()).as("check selfieUrl").isEqualTo(expected.getSelfieUrl()))
            .satisfies(a -> assertThat(a.getIdPhotoUrl()).as("check idPhotoUrl").isEqualTo(expected.getIdPhotoUrl()))
            .satisfies(a -> assertThat(a.getMatch()).as("check match").isEqualTo(expected.getMatch()))
            .satisfies(a -> assertThat(a.getScore()).as("check score").isEqualTo(expected.getScore()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFaceMatchUpdatableRelationshipsEquals(FaceMatch expected, FaceMatch actual) {
        assertThat(actual)
            .as("Verify FaceMatch relationships")
            .satisfies(a -> assertThat(a.getCustomer()).as("check customer").isEqualTo(expected.getCustomer()));
    }
}
