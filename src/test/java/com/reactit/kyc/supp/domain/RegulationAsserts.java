package com.reactit.kyc.supp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RegulationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRegulationAllPropertiesEquals(Regulation expected, Regulation actual) {
        assertRegulationAutoGeneratedPropertiesEquals(expected, actual);
        assertRegulationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRegulationAllUpdatablePropertiesEquals(Regulation expected, Regulation actual) {
        assertRegulationUpdatableFieldsEquals(expected, actual);
        assertRegulationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRegulationAutoGeneratedPropertiesEquals(Regulation expected, Regulation actual) {
        assertThat(actual)
            .as("Verify Regulation auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRegulationUpdatableFieldsEquals(Regulation expected, Regulation actual) {
        assertThat(actual)
            .as("Verify Regulation relevant properties")
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getContent()).as("check content").isEqualTo(expected.getContent()))
            .satisfies(a -> assertThat(a.getSourceUrl()).as("check sourceUrl").isEqualTo(expected.getSourceUrl()))
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRegulationUpdatableRelationshipsEquals(Regulation expected, Regulation actual) {
        // empty method
    }
}
